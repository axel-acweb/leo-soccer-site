{% extends 'base.html.twig' %}


{% block body %}
<div class="hero overlay" style="background-image: url('images/bg_1.jpg');">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-12 ml-auto">
                <h1 class="text-white">RÃ©sultats</h1>
            </div>
        </div>
    </div>
</div>
<div class="mt-5 mb-5">
    <div class="container">
    <div class="row align-items-center">
        <div class="col-12 ml-auto">
            <div class="row" id="results_html">
            {% for key, group_stage in gsM %}
                <div class="col-md-12 bg-dark border p-2">
                    <h2 class="text-center m-3">Poule {{ group_stage.matchs[0].groupStage.name }}</h2>
                    <div class="widget-next-match">
                    <table class="table custom-table">
                        <thead>
                        <tr>
                            <th>Team</th>
                            <th>MJ</th>
                            <th>G</th>
                            <th>N</th>
                            <th>P</th>
                            <th>+/-</th>
                            <th>PTS</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for key, team in group_stage.teams %}
                        <tr>
                            <td><strong class="text-white">{{team.teamName}}</strong></td>
                            <td>{{ team.victories + team.draw + team.defeat }}</td>
                            <td>{{ team.victories }}</td>
                            <td>{{ team.draw }}</td>
                            <td>{{ team.defeat }}</td>
                            <td>{{team.goalFor != null ? team.goalFor : '0'}}/{{team.scoreAgainst != null ? team.scoreAgainst : '0'}}</td>
                            <td>{{ team.points }}</td>
                        </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                    </div>
                </div>
            {% endfor %}
            </div>
        </div>
    </div>
    </div>
</div>

<script>

function setResults () {
    fetch("{{path('app_results_html')}}", {
        method: "GET",
        headers: {
            "Content-Type": "application/json",
        }
    })
    .then(function (response) {
        return response.text()
    })
    .then(function (html) {
        let parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');

        document.getElementById("results_html").innerHTML = doc.getElementById("new_html").innerHTML;
        console.log(html)
    })
}

var interval = setInterval(function () { setResults(); }, 60000);


</script>
{% endblock %}
